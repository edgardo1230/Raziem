<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.raziem</groupId>
	<artifactId>configServer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>${packaging.type}</packaging>

	<name>ConfigServer</name>
	<description>Demo project for Spring Boot</description>

	<organization>
		<name>Raziem System</name>
		<url>http://raziem.com/</url>
	</organization>

	<developers>
		<developer>
			<id>ecruz</id>
			<name>Edgardo Cruz</name>
			<organization>Raziem System</organization>
		</developer>
	</developers>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<start-class>com.raziem.config.ConfigServerApplication</start-class>
		<packaging.type>jar</packaging.type>
		<docker.image.prefix>raziem</docker.image.prefix>
		<push.image>false</push.image>
		<!-- Plugins -->
		<maven-clean-plugin.version>2.5</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<docker-maven-plugin-spotify.version>0.4.10</docker-maven-plugin-spotify.version>
		<!-- Test Dependencies -->
		<rest-assured.version>2.9.0</rest-assured.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-monitor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-resources-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <delimiters> -->
			<!-- <delimiter>@</delimiter> -->
			<!-- </delimiters> -->
			<!-- <useDefaultDelimiters>false</useDefaultDelimiters> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArguments>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin-spotify.version}</version>
				<!-- Include: export DOCKER_HOST=tcp://docker:4243 in host executing 
					mvn docker:build -->
				<configuration>
					<!-- One or the other -->
					<!-- First add server entry in settings.xml -->
					<!-- <serverId>docker-hub</serverId> -->
					<!-- Uses ~/.docker/config.json created once logged in using "docker 
						login" command -->
					<useConfigFile>true</useConfigFile>

					<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
					<pushImage>${push.image}</pushImage>
					<forceTags>true</forceTags>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>application.yml</include>
				</includes>
			</resource>
		</resources>
	</build>


</project>
